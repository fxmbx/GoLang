{{define "stripe-js"}}
<script src="https://js.stripe.com/v3/"></script>
<script>
    let card;
    let stripe;
    const cardMessagaes = document.getElementById("card-messages");
    const payBtn = document.getElementById("pay-button")
    const processing = document.getElementById("processing-payment")

    {{/* stripe = Stripe("pk_test_51LC4TMKxxGMLmzvfxaOPan6KPQK8HdRlFeX66lzpvYOwcP2gHWPJiJCoF05ybyaehdf472vyNwh0jA4DD0OnKwMt001DmmGgce") */}}

    stripe = Stripe({{.API}}) 

    function showPayButtons(){
        payBtn.classList.remove('d-none')
        processing.classList.add('d-none')
    }

    function showCardError(message){
        cardMessagaes.classList.add("alert-danger")
        cardMessagaes.classList.remove("alert-success")
        cardMessagaes.classList.remove("d-none")
        cardMessagaes.innerText = message
    }
    function showCardSuccess(){
        cardMessagaes.classList.add("alert-success")
        cardMessagaes.classList.remove("d-none")
        cardMessagaes.classList.remove("alert-danger")
        cardMessagaes.innerText = "Transaction Successful"  
    }

    function hidePayBtn() {
        payBtn.classList.add('d-none')
        processing.classList.remove('d-none')
    }
    function val(){
        let form = document.getElementById("charge_form")
        if (form.checkValidity() === false) {
            this.event.preventDefault()
            this.event.stopPropagation()
            form.classList.add('was-validated')
            return
        }
        form.classList.add('was-validated')
        hidePayBtn()

        let amountToCharge = String(parseFloat(document.getElementById("amount").value * 100)) 
        {{/* console.log(amountToCharge) */}}
        const payload ={
            amount: amountToCharge,
            currency: "ngn"
        }

        const options ={
            method:"POST",
            headers: {
                'Accept' :'application/json',
                'Content-Type' : 'application/json'
            },
            body: JSON.stringify(payload)
        }

        {{/* fetch("http://localhost:4001/api/payment-intent", options).then(response=>response.text()) */}}
        fetch("{{index .StringMap "publishable_key"}}", options).then(response=>response.text())
            .then(response => {
                let data;
                try{
                    data = JSON.parse(response)
                    console.log(data)
                    stripe.confirmCardPayment(data.client_secret, {
                        payment_method : {
                            card: card,
                            billing_details : {
                                    name: document.getElementById("cardholder-name").value,
                            }
                        }
                    
                     }).then(function(result){
                        if(result.error){
                            //card declined 
                            showCardError(result.error.message)
                            showPayButtons()
                        }else if(result.paymentIntent) {
                            if(result.paymentIntent.status === "succeeded") {
                                document.getElementById("payment_method").value = result.paymentIntent.payment_method_types[0]
                                document.getElementById("payment_intent").value = result.paymentIntent.id
                                document.getElementById("payment_amount").value = result.paymentIntent.amount
                                document.getElementById("payment_currency").value = result.paymentIntent.currency

                                processing.classList.add('d-none')

                                showCardSuccess()

                                document.getElementById("charge_form").submit()
                            }
                        }
                     })
                }catch(err){
                    showCardError("Invalid response from payment gateway")
                    showPayButtons(); 
                }
            } ).catch()
    }


    (function (){
        //create stripe and it's element 
        const elements  = stripe.elements();
        const style = {
            base: {
                lineHeight:'25px',
                fontSize:'16px',
            }
        };


        card = elements.create('card', {
            style:style,
            hidePostalCode: true,
        });

        card.mount("#card-element")

        card.addEventListener('change', function(event){
        
             var displayError = document.getElementById("card-errors")

             if (event.error){
                displayError.classList.remove('d-none')
                displayError.textContent = event.error.message
             }else {
                displayError.classList.add('d-none')
                displayError.textContent = ""

             }
        })
    })();
</script>

{{end}}